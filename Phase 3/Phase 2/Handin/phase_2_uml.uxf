<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="12.2">
  <zoom_level>5</zoom_level>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>265</x>
      <y>150</y>
      <w>105</w>
      <h>75</h>
    </coordinates>
    <panel_attributes>Main
--
#Main(args: String[]): void
#rubixEg(): void
#XOR(): void
#UnitTests(): void
#intro(): void
#getStringInput(): String
#getInput(): int</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>425</x>
      <y>135</y>
      <w>225</w>
      <h>115</h>
    </coordinates>
    <panel_attributes>UnitTests::UnitTests
--
#testCSVFormatting(): void
#testRubixNetwork(): void
#testSBP(): void
#testLayers(): void
#testNeuralNetwork(): void
#testCalcNetValues(): void
#calcActivation(net: double): double
#testGenerateTuples(training_data: String): ArrayList
#testTuples(tuple: ArrayList): void
#getInputTuple(list: ArrayList, input_size: int): double[]
#getExpectedOutput(list: ArrayList, input_size: int): double[]
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>5</x>
      <y>275</y>
      <w>225</w>
      <h>195</h>
    </coordinates>
    <panel_attributes>NeuralNetwork::Layer
--
-is_input: boolean
-is_hidden: boolean
-is_output: boolean
-is_bias: boolean
-layer_size: int
-bias_synapses: ArrayList
-layer_number: int

--
#connectTo(connect_to: Layer): void
#connectBiasTo(hidden[]: Layer, output: Layer): void
#initSynapses(): void
#setSynapsesWeightnode: int, node_to: int, val: double): void
#getSynapseLength(): int
#getInnerSynapseSize(pos: int): int
#getLayerSize(): int
#setNeuronValue(neuron: int, val: double): void
#setLayerNumber(n: int): void
#getLayerNumber(): int
#getSynapseWeight(node: int, node_to: int): double
#getSynapseSize(node: int): int
#getBiasSynapseWeight(layer: int, node_to: int): double
#getNeuronValue(node: int): double
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>265</x>
      <y>275</y>
      <w>320</w>
      <h>170</h>
    </coordinates>
    <panel_attributes>NeuralNetwork::NeuralNetwork
--
-input: Layer
-hidden: Layer[]
-output: Layer
-bias: Layer
-input_size: int
-hidden_size: int
-output_size: int
--
#feedForward(input_array: double[]): double[]
#calcNetValues(from: Layer, to: Layer): void
#calcActivation(net: double): double
#getAllOutput(): double[]
#saveNeuralNetwork(name: String): void
#loadNeuralNetwork(name: String): void
#getInnerSynapseSize(layer: int, pos: int, hidden_layer: int): int
#getNeuronValueI(layer: int, neuron: int, hidden_layer: int): double
#getHiddenSynapseSize(laye: int): double
#getHiddenSynapseWeight(hidden_layer: int, neuron: int, neuron_to: int): double
#updateSynapseWeight(layer: int, neuron_from: int, neuron_to: int, weight: double): void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>600</x>
      <y>305</y>
      <w>340</w>
      <h>140</h>
    </coordinates>
    <panel_attributes>Backpropagation::StochasticBackpropagation
--
-NN: Backpropagation
--
#SBP(input_size: int
    hidden_size: int
    output_size: int
    training_data: String
    training_iterations: int
    error_threshold: double
    learning_rate: double): Backpropagation
#updateSynapseWeight(layer: int, from: int, to: int, weight_update: double): void
#generateTuples(training_data: String): ArrayList
#genRandomNeuralNetwork(input_size: int, hidden_size: int, output_size: int): NeuralNetwork
#chooseTrainingTuple(list: ArrayList): ArrayList
#getInputTuple(list: ArrayList, input_size: int): double[]
#getExpectedOutput(list: ArrayList, input_size: int): ArrayList
#errorAtHidden(error_output: double[], netj: double, neuron: int, hidden_layer: int): double
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Relation</type>
    <coordinates>
      <x>355</x>
      <y>165</y>
      <w>79</w>
      <h>35</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-
Calls</panel_attributes>
    <additional_attributes>70;25;15;25</additional_attributes>
  </element>
  <element>
    <type>com.umlet.element.Relation</type>
    <coordinates>
      <x>285</x>
      <y>210</y>
      <w>54</w>
      <h>74</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-
    Calls</panel_attributes>
    <additional_attributes>30;65;30;15</additional_attributes>
  </element>
  <element>
    <type>com.umlet.element.Relation</type>
    <coordinates>
      <x>215</x>
      <y>305</y>
      <w>59</w>
      <h>35</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-
Uses</panel_attributes>
    <additional_attributes>15;25;50;25</additional_attributes>
  </element>
  <element>
    <type>com.umlet.element.Relation</type>
    <coordinates>
      <x>380</x>
      <y>430</y>
      <w>88</w>
      <h>64</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-
        Implements</panel_attributes>
    <additional_attributes>45;55;45;15</additional_attributes>
  </element>
  <element>
    <type>com.umlet.element.Relation</type>
    <coordinates>
      <x>590</x>
      <y>430</y>
      <w>244</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-
    Uses</panel_attributes>
    <additional_attributes>15;100;220;100;220;15</additional_attributes>
  </element>
  <element>
    <type>com.umlet.element.Relation</type>
    <coordinates>
      <x>635</x>
      <y>165</y>
      <w>109</w>
      <h>149</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-
Calls</panel_attributes>
    <additional_attributes>90;140;90;25;15;25</additional_attributes>
  </element>
  <element>
    <type>com.umlet.element.Relation</type>
    <coordinates>
      <x>355</x>
      <y>200</y>
      <w>79</w>
      <h>84</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-
Calls</panel_attributes>
    <additional_attributes>25;75;25;25;70;25</additional_attributes>
  </element>
  <element>
    <type>com.umlet.element.Relation</type>
    <coordinates>
      <x>150</x>
      <y>120</y>
      <w>284</w>
      <h>164</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-
Calls</panel_attributes>
    <additional_attributes>25;155;25;25;275;25</additional_attributes>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>285</x>
      <y>495</y>
      <w>320</w>
      <h>85</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Interface&gt;&gt;
Backpropagation::Backpropagation
--
-error: double
--
/+updateSynapseWeight(layer: int, neuron_from: int, neuron_to: int, weight: double): void/
/+feedForward(input: double[]): double[]/
/+calcActivation(net: double): double/
/+getNeuronValue(layer: int, neuron: int, hidden_layer: int): double/
/+getHiddenSynapseWeight(hidden_layer: int, neuron: int, k: int): double/
/+getHiddenSynapseSize(hidden_layer: int): int/
</panel_attributes>
    <additional_attributes/>
  </element>
</diagram>
